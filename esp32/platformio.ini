# platform_io/platformio.ini

[env:esp32dev]
platform = espressif32
board = esp32dev
framework = arduino

# Automatically detects the connected serial port
upload_port = COM3              ; Replace with your port if not COM3 on Windows, or use `/dev/ttyUSB0` for Linux
upload_speed = 2000000           ; Standard speed used by Arduino IDE for ESP32

# Monitor settings (adjust COM port as needed)
monitor_speed = 2000000          ; Matches the default baud rate
monitor_port = COM3             ; Replace with the correct COM port

# Libraries and dependencies
lib_deps =
    bblanchon/ArduinoJson
    me-no-dev/ESP Async WebServer
    me-no-dev/AsyncTCP

# Optional build flags (define pins or custom settings as needed)
build_flags = 
    -D LED_BUILTIN=2            ; Built-in LED for ESP32 (default GPIO 2 on most boards)
    -D WIFI_SSID=\"CURTIN-STUDENT\" ; WIFI SSID
    -D WIFI_PASSWORD=\"STD#CRTN@24\" ; WIFI PASS

# Use Arduino-style upload method
upload_protocol = esptool       ; Uses the esptool.py uploader (default for ESP32)


[env:esp8266]
platform = espressif8266
board = nodemcuv2               ; Replace with your specific ESP8266 board
framework = arduino

# Automatically detects the connected serial port
upload_port = COM3              ; Replace with your port (e.g., COM3 for Windows or /dev/ttyUSB0 for Linux/MacOS)
upload_speed = 2000000           ; Standard speed for ESP8266

# Monitor settings
monitor_speed = 2000000          ; Matches the default baud rate
monitor_port = COM3             ; Replace with the correct COM port

# Libraries and dependencies
lib_deps =
    bblanchon/ArduinoJson
    me-no-dev/ESP Async WebServer
    me-no-dev/AsyncTCP

# Optional build flags
build_flags = 
    -D LED_BUILTIN=2            ; Built-in LED (usually GPIO 2 on ESP8266 boards)
    -D WIFI_SSID=\"Dialog 4G 519\" ; Replace with your Wi-Fi SSID
    -D WIFI_PASSWORD=\"FD8458C7\" ; Replace with your Wi-Fi password

# Use Arduino-style upload method
upload_protocol = esptool       ; Default upload protocol for ESP8266
